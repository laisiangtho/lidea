/// Flutter icons Lidea
/// Copyright (C) 2021 by original authors @ fluttericon.com, fontello.com
/// This font was generated by FlutterIcon.com, which is derived from Fontello.
///
/// To use this font, place it in your fonts/ directory and include the
/// following in your pubspec.yaml
///
/// flutter:
///   fonts:
///    - family:  Lidea
///      fonts:
///       - asset: fonts/Lidea.ttf
///
///
/// * Entypo, Copyright (C) 2012 by Daniel Bruce
///         Author:    Daniel Bruce
///         License:   SIL (http://scripts.sil.org/OFL)
///         Homepage:  http://www.entypo.com
/// * Web Symbols, Copyright (c) 2011 by Just Be Nice studio. All rights reserved.
///         Author:    Just Be Nice studio
///         License:   SIL (http://scripts.sil.org/OFL)
///         Homepage:  http://www.justbenicestudio.com/
/// * Font Awesome 4, Copyright (C) 2016 by Dave Gandy
///         Author:    Dave Gandy
///         License:   SIL ()
///         Homepage:  http://fortawesome.github.com/Font-Awesome/
/// * Iconic, Copyright (C) 2012 by P.J. Onori
///         Author:    P.J. Onori
///         License:   SIL (http://scripts.sil.org/OFL)
///         Homepage:  http://somerandomdude.com/work/iconic/
/// * Linearicons Free, Copyright (C) Linearicons.com
///         Author:    Perxis
///         License:   CC BY-SA 4.0 (https://creativecommons.org/licenses/by-sa/4.0/)
///         Homepage:  https://linearicons.com
/// * Linecons, Copyright (C) 2013 by Designmodo
///         Author:    Designmodo for Smashing Magazine
///         License:   CC BY ()
///         Homepage:  http://designmodo.com/linecons-free/
/// * Material Design Icons, Copyright (C) Google, Inc
///         Author:    Google
///         License:   Apache 2.0 (https://www.apache.org/licenses/LICENSE-2.0)
///         Homepage:  https://design.google.com/icons/
/// * Elusive, Copyright (C) 2013 by Aristeides Stathopoulos
///         Author:    Aristeides Stathopoulos
///         License:   SIL (http://scripts.sil.org/OFL)
///         Homepage:  http://aristeides.com/
/// * Font Awesome 5, Copyright (C) 2016 by Dave Gandy
///         Author:    Dave Gandy
///         License:   SIL (https://github.com/FortAwesome/Font-Awesome/blob/master/LICENSE.txt)
///         Homepage:  http://fortawesome.github.com/Font-Awesome/
/// * MFG Labs, Copyright (C) 2012 by Daniel Bruce
///         Author:    MFG Labs
///         License:   SIL (http://scripts.sil.org/OFL)
///         Homepage:  http://www.mfglabs.com/
/// * Octicons, Copyright (C) 2020 by GitHub Inc.
///         Author:    GitHub
///         License:   MIT (http://opensource.org/licenses/mit-license.php)
///         Homepage:  https://primer.style/octicons/
///
import 'package:flutter/widgets.dart';

class LideaIcon {
  LideaIcon._();

  static const _kFontFam = 'Lidea';
  static const String? _kFontPkg = null;

  static const IconData info = IconData(0xe800, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData cancel = IconData(0xe801, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData cog = IconData(0xe802, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData cogAlt = IconData(0xe803, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData wrench = IconData(0xe804, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData listNested =
      IconData(0xe805, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData listAdd = IconData(0xe806, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData list = IconData(0xe807, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData trash = IconData(0xe808, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData find = IconData(0xe809, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData layout = IconData(0xe80a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData play = IconData(0xe80b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData stop = IconData(0xe80c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData pause = IconData(0xe80f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData record = IconData(0xe810, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData cd = IconData(0xe811, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData album = IconData(0xe812, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData albums = IconData(0xe813, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData shuffle = IconData(0xe814, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData leftOpenBig =
      IconData(0xe815, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData rightOpenBig =
      IconData(0xe816, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData leftOpen = IconData(0xe817, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData rightOpen = IconData(0xe818, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData home = IconData(0xe819, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData attach = IconData(0xe81a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData flag = IconData(0xe81b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData language = IconData(0xe81c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData popup = IconData(0xe81d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData loop = IconData(0xe81e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData switchArrow =
      IconData(0xe81f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData articleAlt =
      IconData(0xe820, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData tools = IconData(0xe821, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData shareable = IconData(0xe822, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData dotHoriz = IconData(0xe823, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData dotTwo = IconData(0xe824, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData dragHandler =
      IconData(0xe826, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData playNext = IconData(0xe827, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData playPrevious =
      IconData(0xe828, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData artist = IconData(0xe829, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData users = IconData(0xe82a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData music = IconData(0xe82b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData track = IconData(0xe82c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData listen = IconData(0xe82d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData time = IconData(0xe82e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData google = IconData(0xe82f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData alarm = IconData(0xe858, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData history = IconData(0xe863, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData layers = IconData(0xe88e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData textSize = IconData(0xe892, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData pageBreak = IconData(0xe8a2, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData chapterNext =
      IconData(0xf006, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData chapterPrevious =
      IconData(0xf007, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData menu = IconData(0xf008, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData book = IconData(0xf02d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData bookmark = IconData(0xf02e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData twitter = IconData(0xf099, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData github = IconData(0xf09b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData copy = IconData(0xf0c5, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData tumblr = IconData(0xf173, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData apple = IconData(0xf179, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData microsoft = IconData(0xf17a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData fileCode = IconData(0xf1c9, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData sliders = IconData(0xf1de, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData addressBook =
      IconData(0xf2b9, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData checklist = IconData(0xf301, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData tasklist = IconData(0xf31c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData note = IconData(0xf376, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData facebook = IconData(0xf39e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData search = IconData(0xf3c3, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData clipboardList =
      IconData(0xf46d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData bookOpen = IconData(0xf518, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData waveSquare =
      IconData(0xf83e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
}
